<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>Peter Brooksbank</title>
		<link>http://peterbrooksbank.com/</link>
		<description />
		<copyright>2019</copyright>
		<pubDate>Sun, 04 Aug 2019 23:00:04 GMT</pubDate>
		<lastBuildDate>Sun, 04 Aug 2019 23:00:04 GMT</lastBuildDate>
		<item>
			<title>Improving blog page load time</title>
			<link>http://peterbrooksbank.com/posts/improving-wyam-cleanblog-page-load-time</link>
			<description>&lt;p&gt;Page load time matters. Users are impatient and even Google now uses it as metric in their search results ranking. The default Wyam blog themes are a good starting point but what small changes can we make to improve page load times?&lt;/p&gt;</description>
			<guid>http://peterbrooksbank.com/posts/improving-wyam-cleanblog-page-load-time</guid>
			<pubDate>Thu, 11 Jul 2019 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Page load time matters. Users are impatient and even Google now uses it as metric in their search results ranking. The default Wyam blog themes are a good starting point but what small changes can we make to improve page load times?&lt;/p&gt;
&lt;p&gt;When I created the blog I chose to use the CleanBlog theme (&lt;a href="https://wyam.io/recipes/blog/themes/preview/cleanblog/"&gt;preview&lt;/a&gt;). This, along with a few others, is provided out of the box by Wyam. They provide an excellent starting point to hit the ground running and a clean base to begin modifying.&lt;/p&gt;
&lt;h2 id="where-to-start"&gt;Where to start?&lt;/h2&gt;
&lt;p&gt;Most blogs have the same set of initial priorities, ranging from the overall design to getting some eyes on posts. However, we all have a different order for these priorities. For me the first aspect is page load time, I like making things fast. I find it satisfying to take a hot spot in a critical path and finding ways to improve it. Often an impact can be made by simplifying the existing code, refactoring it to reduce the work done and hopefully making it clearer to read in the process.&lt;/p&gt;
&lt;p&gt;A good place to start with the speed of web pages is &lt;a href="https://developers.google.com/speed/pagespeed/insights/"&gt;PageSpeed Insights by Google&lt;/a&gt; which analyzes the content and then generates suggestions to make that page faster. As performance is now one of the key metrics Google uses for site ranking in their search results, it's worthwhile having a look to see what gets suggested. The scores can fluctuate by a couple of points between runs but I found that several runs gave an average of 73 for the home page. The key takeaway was the time required for render-blocking resources which looked like this:&lt;/p&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;th&gt;Size&lt;/th&gt;
&lt;th&gt;Potential Savings&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;…css/bootstrap.min.css(wyam.io)&lt;/td&gt;
&lt;td&gt;20 KB&lt;/td&gt;
&lt;td&gt;1,080 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…css/highlight.css(wyam.io)&lt;/td&gt;
&lt;td&gt;1 KB&lt;/td&gt;
&lt;td&gt;480 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…css/clean-blog.css(wyam.io)&lt;/td&gt;
&lt;td&gt;2 KB&lt;/td&gt;
&lt;td&gt;480 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…css/master.css(wyam.io)&lt;/td&gt;
&lt;td&gt;1 KB&lt;/td&gt;
&lt;td&gt;480 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…css/font-awesome.min.css(wyam.io)&lt;/td&gt;
&lt;td&gt;7 KB&lt;/td&gt;
&lt;td&gt;780 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/css?family=Lora:400,700,400italic,700italic(fonts.googleapis.com)&lt;/td&gt;
&lt;td&gt;1 KB&lt;/td&gt;
&lt;td&gt;780 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/css?family=…(fonts.googleapis.com)&lt;/td&gt;
&lt;td&gt;2 KB&lt;/td&gt;
&lt;td&gt;780 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…css/override.css(wyam.io)&lt;/td&gt;
&lt;td&gt;0 KB&lt;/td&gt;
&lt;td&gt;480 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…js/jquery.min.js(wyam.io)&lt;/td&gt;
&lt;td&gt;30 KB&lt;/td&gt;
&lt;td&gt;1,080 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…js/bootstrap.min.js(wyam.io)&lt;/td&gt;
&lt;td&gt;10 KB&lt;/td&gt;
&lt;td&gt;480 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…js/highlight.pack.js(wyam.io)&lt;/td&gt;
&lt;td&gt;25 KB&lt;/td&gt;
&lt;td&gt;930 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…js/clean-blog.js(wyam.io)&lt;/td&gt;
&lt;td&gt;1 KB&lt;/td&gt;
&lt;td&gt;180 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…js/d3.v3.min.js(wyam.io)&lt;/td&gt;
&lt;td&gt;53 KB&lt;/td&gt;
&lt;td&gt;1,230 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…js/trianglify.min.js(wyam.io)&lt;/td&gt;
&lt;td&gt;5 KB&lt;/td&gt;
&lt;td&gt;330 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…js/Please-compressed.js(wyam.io)&lt;/td&gt;
&lt;td&gt;3 KB&lt;/td&gt;
&lt;td&gt;180 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…js/background-check.min.js(wyam.io)&lt;/td&gt;
&lt;td&gt;4 KB&lt;/td&gt;
&lt;td&gt;180 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;That's a lot of resources for a home page with not much happening. Let's break down what's going on with all of this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Highlight is for code syntax highlighting&lt;/li&gt;
&lt;li&gt;Bootstrap, clean-blog, master and override are the CSS for the blog in general&lt;/li&gt;
&lt;li&gt;Font Awesome for the RSS icon&lt;/li&gt;
&lt;li&gt;Font files from google fonts used by the theme&lt;/li&gt;
&lt;li&gt;jquery.min.js, bootstrap.min.js, highlight.pack.js, clean-blog.js for general theme functions&lt;/li&gt;
&lt;li&gt;Background-check for switching text colour depending on the colour in the background on the header&lt;/li&gt;
&lt;li&gt;D3, Trianglify and Please-compressed for generating the image in the header&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yup, the image in the header is generated by JavaScript and it's render-blocking. This one's an easy win, we can remove the bottom 4 JavaScript files and replace them with a single webp image which isn't render blocking. Sure it's not quite as cool as generating a triangular mesh that's different per request but it's good enough for my purposes.&lt;/p&gt;
&lt;p&gt;Next, I took a look at the font files. We're loading both Lora and Open-Sans in a variety of weights and italics. For my simple blog, I don't need all of these. For now, I removed all external fonts and I'll revisit the fonts I want on my blog in the future when I look at tweaking the design of the blog itself. In a similar vein, I removed the font-awesome file. It was been used for a single icon, the RSS icon. I replaced this with a piece of inline SVG to keep the benefit of using a font without the size of the entire file.&lt;/p&gt;
&lt;p&gt;The final step in this process was to look at the CSS been used by the site. First up was Bootstrap, a lot of the CSS included by default wasn't been used so I used their &lt;a href="https://getbootstrap.com/docs/3.4/customize/"&gt;online bundle builder&lt;/a&gt; to grab a version of the CSS with only bits I wanted in it. Note that this theme uses Bootstrap 3 and not the newer Bootstrap 4. I took a look at Highlight next. As it was so small I decided to remove the network hit and simple inline it in the page itself. I then did the same with the master.css given how small it was (less than 1KB). Note here that I'm currently minimizing the CSS before adding it inline.&lt;/p&gt;
&lt;h2 id="result"&gt;Result&lt;/h2&gt;
&lt;p&gt;So after these relatively simple and quick tweaks what do we have to show for it?&lt;/p&gt;
&lt;p&gt;Well running the site via PageSpeed Insights again gives us 100 for both mobile and desktop scores. When we look at the impact it's had in the Chrome network tab we can see the following:&lt;/p&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Requests&lt;/th&gt;
&lt;th&gt;Transferred&lt;/th&gt;
&lt;th&gt;Resources&lt;/th&gt;
&lt;th&gt;Finish&lt;/th&gt;
&lt;th&gt;DOMContentLoaded&lt;/th&gt;
&lt;th&gt;Load&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Before&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;342KB&lt;/td&gt;
&lt;td&gt;756KB&lt;/td&gt;
&lt;td&gt;1.44s&lt;/td&gt;
&lt;td&gt;1.06s&lt;/td&gt;
&lt;td&gt;1.28s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;After&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;246KB&lt;/td&gt;
&lt;td&gt;389KB&lt;/td&gt;
&lt;td&gt;386ms&lt;/td&gt;
&lt;td&gt;244ms&lt;/td&gt;
&lt;td&gt;344ms&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Even though the resource size was already reasonably low before we started, by making these changes we've cut our timings by almost 75%. Best of all the impact the changes have had on the design of the site is almost imperceptible (at least if we discount the header image) and the overall site is now simpler. Not too shabby for some relatively small changes.&lt;/p&gt;
</content:encoded>
		</item>
		<item>
			<title>Creating a blog with Wyam</title>
			<link>http://peterbrooksbank.com/posts/creating-blog-wyam</link>
			<description>&lt;p&gt;A common piece of advice I see on Twitter from people in the industry with blogs is to write the posts for yourself as an archive of what you've done. So what better place to start than this blog?&lt;/p&gt;</description>
			<guid>http://peterbrooksbank.com/posts/creating-blog-wyam</guid>
			<pubDate>Sun, 07 Jul 2019 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;A common piece of advice I see on Twitter from people in the industry with blogs is to write the posts for yourself as an archive of what you've done. So what better place to start than this blog?&lt;/p&gt;
&lt;p&gt;I've attempted to start a blog several times over the years at this point. It never seems to get out the door, whether it's making sure the design is correct, the performance as fast as possible, the CI/CD pipelines are setup or that SSL is correctly configured. Still, it never gets out the door. Having read &lt;a href="https://basecamp.com/books/rework"&gt;ReWork&lt;/a&gt; lately I decided to treat my blog like an MVP (minimum viable product), getting something out the door and refining it later.&lt;/p&gt;
&lt;h2 id="why-wyam"&gt;Why Wyam&lt;/h2&gt;
&lt;p&gt;I have a few key considerations when it comes to creating a blog:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I want it to be fast&lt;/li&gt;
&lt;li&gt;Creating a new post should be simple&lt;/li&gt;
&lt;li&gt;I don't want to write the entire structure myself (blogs are largely a solved problem) but I want to be in control&lt;/li&gt;
&lt;li&gt;I want it to be in a language I've worked with before (less cognitive load)&lt;/li&gt;
&lt;li&gt;I don't want to use a platform that gates posts&lt;/li&gt;
&lt;li&gt;I want to host it for free&lt;/li&gt;
&lt;li&gt;I want the deployment to be simple&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The fastest you can get with code is to do nothing. A static site means our page is just an asset to serve, no back-end controllers performing logic to decide the page content or render it out. There are many static site generators and a lot of them have options for creating a blog. After some consideration I chose &lt;a href="https://wyam.io/"&gt;Wyam&lt;/a&gt;. There are a number of reasons for this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's written in C# and is using .Net Core. I'm fairly comfortable with C# and have been wanting to look more at .Net Core. Wyam pipelines may be a good avenue into it&lt;/li&gt;
&lt;li&gt;RSS and Atom feeds out of the box&lt;/li&gt;
&lt;li&gt;Fast to get going, I was up and running in a couple of minutes&lt;/li&gt;
&lt;li&gt;Some simple themes that are easy to customise&lt;/li&gt;
&lt;li&gt;Posts are just Markdown files&lt;/li&gt;
&lt;li&gt;OSS on GitHub&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Within a few minutes of installing the Wyam CLI tool, following the usage instructions and making some configuration changes to personalise the blog to myself, I had a site up and running locally. I just needed somewhere to host it.&lt;/p&gt;
&lt;h2 id="hosting-on-netlify"&gt;Hosting on Netlify&lt;/h2&gt;
&lt;p&gt;I attended a local dev group evening a number of months back and one of the talks was given by a dev advocate for &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt;. Netlify is, at it's a core, a static site host. It takes care of deployment and includes the ability to use a custom domain and automatically provision a Let's Encrypt certificate for it. They provide preview sites for every deploy that's done and any deploy can be chosen to be published as the live version, taking effect in only a few seconds. Deployments can be achieved by pointing at a GitHub repo and allowing webhooks to post whenever commits are pushed. Best of all, it's free for my purposes (I didn't realise until later but the Wyam site is hosted on Netlify). I've found using Netlify to be fast and intuitive and it suits my needs for the present time.&lt;/p&gt;
&lt;h2 id="putting-it-together"&gt;Putting it together&lt;/h2&gt;
&lt;p&gt;Having constantly spent a lot of time on scrapped blogs, I found that within a couple of hours of sticking to the MVP strategy I had my blog choices made and had deployed it. Sure it's still using one of the out of the box themes but it's clean and readable which is good enough for an MVP. I can tweak the design going forward to suit my tastes and in the meantime, I'll still have a blog on the internet instead of languishing forever in a repo. Focusing on blogging for myself as an archive also removed the pressure of finding something novel and insightful to write about. Hopefully, this brief overview of the choices I made provides something useful to someone else who stumbles across it.&lt;/p&gt;
</content:encoded>
		</item>
	</channel>
</rss>